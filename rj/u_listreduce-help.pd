#N canvas 193 22 1189 745 10;
#X floatatom 165 231 5 0 0 0 - - -;
#X msg 174 71 bang;
#X obj 225 226 print TWO_ITEMS;
#X obj 144 256 print RESULT;
#X msg 181 95 1;
#X msg 189 141 1 2 3;
#X msg 186 117 1 2;
#X msg 192 164 1 2 3 4;
#X text 219 72 redo last list;
#X text 225 96 list with only one item will pass unchanged.;
#X symbolatom 138 371 15 0 0 0 - - -;
#X msg 233 340 \$2-\$1;
#X obj 139 554 u_listreduce;
#X msg 139 527 1 2 3 4 5 6 7 8;
#X msg 234 553 \$2 \$1;
#N canvas 209 220 605 355 more-info 0;
#X msg 84 101 bang;
#X obj 126 236 print TWO_ITEMS;
#X obj 54 266 print RESULT;
#X msg 91 125 1;
#X msg 99 171 1 2 3;
#X msg 96 147 1 2;
#X text 36 42 If nothing is connected to the right inlet \, [u_listreduce]
will act like the left and right outlets of [list split 2] reversed.
;
#X obj 54 203 u_listreduce;
#X msg 342 100 bang;
#X obj 385 244 print TWO_ITEMS;
#X obj 312 265 print RESULT;
#X msg 349 124 1;
#X msg 357 170 1 2 3;
#X msg 354 146 1 2;
#X obj 312 202 list split 2;
#X text 178 202 equal to this:;
#X connect 0 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 7 0 2 0;
#X connect 7 1 1 0;
#X connect 8 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 14 0 9 0;
#X connect 14 2 10 0;
#X restore 138 412 pd more-info;
#X obj 139 582 print REVERSE?;
#X obj 138 341 u_listreduce;
#X obj 144 193 u_listreduce;
#X text 136 452 It's important \, that there will be only one element
coming back in through the right inlet. Lists with more than one item
will be shortened automatically to avoid stack overflows.;
#X text 288 552 <-- two items == bad idea;
#X msg 138 314 a b c d e;
#X obj 366 195 u_listreduce;
#X obj 459 195 min;
#N canvas 0 22 450 300 randlist 0;
#X obj 254 138 random 100;
#X obj 254 116 until;
#X msg 366 138 set;
#X msg 232 61 10;
#X msg 254 160 add2 \$1;
#X obj 232 88 t b f b;
#X obj 255 236 outlet;
#X obj 232 38 inlet;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 5 1 1 0;
#X connect 5 2 2 0;
#X connect 7 0 3 0;
#X restore 366 142 pd randlist;
#X msg 366 168 11 53 38 22 96 97 83 10 20 76;
#X msg 366 122 bang;
#X obj 419 221 u_listreduce;
#X floatatom 419 245 5 0 0 3 max - -;
#X obj 523 231 max;
#X floatatom 366 246 5 0 0 3 min - -;
#X obj 243 193 +;
#X obj 365 377 u_listreduce;
#X floatatom 365 400 5 0 0 0 - - -;
#X msg 365 347 22 31 47 86;
#N canvas 0 22 701 458 compare-two 0;
#X obj 99 12 inlet;
#X obj 99 318 outlet;
#X obj 164 162 abs;
#X obj 99 161 abs;
#X obj 99 41 unpack f f;
#X obj 99 90 t a a;
#X obj 99 272 f;
#X obj 164 90 t a a;
#X obj 131 272 f;
#X obj 99 247 select 1 0;
#X text 178 276 send number with smaller distance back to reduce;
#X text 215 151 calculate distances;
#X obj 99 192 <;
#X obj 217 91 inlet;
#X obj 164 139 -;
#X obj 99 138 -;
#X connect 0 0 4 0;
#X connect 2 0 12 1;
#X connect 3 0 12 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 15 0;
#X connect 5 1 6 1;
#X connect 6 0 1 0;
#X connect 7 0 14 0;
#X connect 7 1 8 1;
#X connect 8 0 1 0;
#X connect 9 0 6 0;
#X connect 9 1 8 0;
#X connect 12 0 9 0;
#X connect 13 0 14 1;
#X connect 13 0 15 1;
#X connect 14 0 2 0;
#X connect 15 0 3 0;
#X restore 461 377 pd compare-two;
#X floatatom 542 354 5 0 0 0 - - -;
#X msg 542 331 45;
#X obj 542 308 loadbang;
#X text 362 310 Find closest element:;
#N canvas 377 58 582 570 REFERENCE 0;
#X text 24 51 Summary:;
#X text 24 91 Argument 0:;
#X text 24 124 Inlet 0:;
#X text 24 144 Inlet 1:;
#X text 24 164 Outlet 0:;
#X text 24 184 Outlet 1:;
#X text 24 434 Tags:;
#X text 24 334 See also:;
#X text 24 234 Description: returns a single value constructed by calling
the user-defined objects connected to the right outlet on the first
two items of the sequence \, then on the result (if it comes in through
the right inlet) and the next item of the original list \, and so on.
;
#X text 24 31 Name: u_listreduce;
#X coords 0 -1 1 1 450 450 1 10 10;
#X restore -435 57 pd REFERENCE;
#X obj -435 28 cnv 15 450 20 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 28 61 Example:;
#X text 366 695 RjDj Library (https://github.com/rjdj/rjlib) - 2011
;
#X text -311 31 - summary;
#X obj -432 30 u_listreduce;
#X connect 1 0 18 0;
#X connect 4 0 18 0;
#X connect 5 0 18 0;
#X connect 6 0 18 0;
#X connect 7 0 18 0;
#X connect 11 0 17 1;
#X connect 12 0 16 0;
#X connect 12 1 14 0;
#X connect 13 0 12 0;
#X connect 14 0 12 1;
#X connect 17 0 10 0;
#X connect 17 1 11 0;
#X connect 18 0 0 0;
#X connect 18 0 3 0;
#X connect 18 1 2 0;
#X connect 18 1 31 0;
#X connect 21 0 17 0;
#X connect 22 0 30 0;
#X connect 22 1 23 0;
#X connect 23 0 22 1;
#X connect 24 0 25 0;
#X connect 25 0 22 0;
#X connect 25 0 27 0;
#X connect 26 0 24 0;
#X connect 27 0 28 0;
#X connect 27 1 29 0;
#X connect 29 0 27 1;
#X connect 31 0 18 1;
#X connect 32 0 33 0;
#X connect 32 1 35 0;
#X connect 34 0 32 0;
#X connect 35 0 32 1;
#X connect 36 0 35 1;
#X connect 37 0 36 0;
#X connect 38 0 37 0;
