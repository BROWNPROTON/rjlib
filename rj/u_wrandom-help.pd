#N canvas 89 22 977 641 10;
#X msg 559 159 bang;
#X floatatom 525 254 5 0 0 0 - - -;
#X obj 517 325 tabread \$0-rand;
#X obj 517 303 t a a;
#X obj 517 158 until;
#X obj 517 350 + 0.001;
#X obj 517 374 tabwrite \$0-rand;
#X msg 517 132 1000;
#X msg 560 183 seed 12123;
#X floatatom 596 253 5 0 0 1 length - -;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-rand 10 float 0;
#X coords 0 1 9 0 200 140 1;
#X restore 702 256 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-dist 10 float 0;
#X coords 0 1 9 0 200 140 1;
#X restore 702 256 graph;
#X obj 643 183 t a a;
#X msg 701 132 3 8 0 2 3 5 1 4 7 2;
#X msg 643 132 1 0 0 1;
#N canvas 0 22 450 300 write-to-tables 0;
#X obj 308 180 s \$0-rand;
#X obj 115 103 list prepend 0;
#X obj 115 128 s \$0-dist;
#X obj 93 256 s \$0-dist;
#X msg 308 158 resize \$1 \, const 0;
#X msg 93 155 normalize 1;
#X msg 227 159 resize \$1;
#X obj 93 55 t b a a;
#X obj 93 33 inlet;
#X obj 227 103 list length;
#X connect 1 0 2 0;
#X connect 4 0 0 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 5 0;
#X connect 7 1 1 0;
#X connect 7 2 9 0;
#X connect 8 0 7 0;
#X connect 9 0 6 0;
#X connect 9 0 4 0;
#X restore 675 210 pd write-to-tables;
#X msg 848 132 10 20 70;
#X msg 556 133 100;
#N canvas 262 240 530 406 markov-example 0;
#X text 32 19 Simple markov chain;
#X obj 77 172 select 0 1 2;
#X obj 77 150 f;
#X obj 93 127 r \$0-state;
#X obj 77 279 s \$0-state;
#X obj 170 279 s \$0-state;
#X obj 263 277 s \$0-state;
#X obj 163 328 hradio 32 1 0 3 empty \$0-state state 0 -8 1 10 -262144
-1 -1 0;
#X obj 239 98 loadbang;
#X obj 77 97 bng 24 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 91 242 5 0 0 0 - - -;
#X obj 91 259 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 185 240 5 0 0 0 - - -;
#X obj 185 257 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 277 239 5 0 0 0 - - -;
#X obj 277 256 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 37 74 metro 200;
#X obj 37 55 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 77 208 u_wrandom;
#X obj 170 208 u_wrandom;
#X obj 263 208 u_wrandom;
#X msg 239 125 0 10 20 70 \, 1 80 10 10 \, 2 50 25 25;
#X obj 239 159 route 0 1 2;
#X connect 1 0 18 0;
#X connect 1 1 19 0;
#X connect 1 2 20 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 8 0 21 0;
#X connect 9 0 2 0;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 15 0;
#X connect 16 0 2 0;
#X connect 17 0 16 0;
#X connect 18 0 4 0;
#X connect 18 0 10 0;
#X connect 19 0 5 0;
#X connect 19 0 12 0;
#X connect 20 0 6 0;
#X connect 20 0 14 0;
#X connect 21 0 22 0;
#X connect 22 0 18 1;
#X connect 22 1 19 1;
#X connect 22 2 20 1;
#X restore 517 410 pd markov-example;
#X obj 517 226 u_wrandom;
#N canvas 18 77 582 570 REFERENCE 0;
#X text 24 434 Tags:;
#X text 24 334 See also:;
#X text 24 234 Description: Use this as a template for writing other
help patches.;
#X text 24 31 Name: u_wrandom;
#X text 24 51 Summary: Use a list as a probability table for weighted
random numbers. (Clone of [list-wrandom]);
#X text 24 111 Inlet 0: connected to [random] internally. "bang" to
make random choice \, "seed X" to seed;
#X text 24 144 Inlet 1: list of random weights. The weigths are used
as probabilities for their positions (zero-based);
#X text 24 179 Outlet 0: random number;
#X text 24 202 Outlet 1: size of probability table (for convenience)
;
#X text 24 91;
#X coords 0 -1 1 1 450 450 1 10 10;
#X restore 15 58 pd REFERENCE;
#X obj 15 28 cnv 15 450 20 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 478 61 Example:;
#X text 576 595 RjDj Library (https://github.com/rjdj/rjlib) - 2011
;
#X obj 18 30 u_wrandom;
#X text 139 31 - generate weighted random numbers;
#X connect 0 0 19 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 3 1 6 1;
#X connect 4 0 19 0;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X connect 8 0 19 0;
#X connect 12 0 19 1;
#X connect 12 1 15 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 16 0 12 0;
#X connect 17 0 4 0;
#X connect 19 0 1 0;
#X connect 19 0 3 0;
#X connect 19 1 9 0;
